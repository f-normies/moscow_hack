"""add inference models for AI segmentation

Revision ID: 804eab4b421b
Revises: 4f04eccae12c
Create Date: 2025-09-30 20:23:06.763507

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '804eab4b421b'
down_revision = '4f04eccae12c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inferencemodel',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('model_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('onnx_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('config_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('modality', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inferencejob',
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('progress', sa.Float(), nullable=False),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('result_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('study_id', sa.Uuid(), nullable=False),
    sa.Column('series_id', sa.Uuid(), nullable=True),
    sa.Column('model_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['inferencemodel.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['dicomseries.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['study_id'], ['dicomstudy.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('segmentationresult',
    sa.Column('output_format', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('classes', sa.JSON(), nullable=True),
    sa.Column('result_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['inferencejob.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('segmentationresult')
    op.drop_table('inferencejob')
    op.drop_table('inferencemodel')
    # ### end Alembic commands ###
