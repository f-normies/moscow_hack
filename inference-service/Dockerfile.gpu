# Multi-stage build for smaller image

# Stage 1: Builder
FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04 AS builder

# Install Python and uv
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    curl \
    && curl -LsSf https://astral.sh/uv/install.sh | sh \
    && rm -rf /var/lib/apt/lists/*

ENV PATH="/root/.cargo/bin:$PATH"

WORKDIR /app

# Copy dependency files
COPY pyproject.toml ./

# Install dependencies
RUN /root/.cargo/bin/uv pip install --system --no-cache -r pyproject.toml

# Stage 2: Runtime
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# Install Python
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.10 /usr/local/lib/python3.10

WORKDIR /app

# Copy application code
COPY app ./app

# Create models directory
RUN mkdir -p /models

ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Run celery worker
CMD ["celery", "-A", "app.worker", "worker", "--loglevel=info", "--concurrency=1"]
